@using ExpenseTracker.Domain.Enums

@model ExpenseTracker.ViewModels.Transfer.UpdateTransferViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Transfer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Note" class="control-label"></label>
                <input asp-for="Note" class="form-control" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="ms-2">
                    <ejs-combobox class="form-select" name="categoryId" id="categories-combobox" value="@Model.CategoryId"  dataSource="@ViewBag.Categories" popupHeight="220px">
                        <e-combobox-fields value="Id" text="Name"></e-combobox-fields>
                    </ejs-combobox>
                </div>
            </div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
